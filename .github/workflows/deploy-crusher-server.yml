name: Deploy Crusher Server

on:
  push:
    branches: [ master ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 12.19.1

      - name: Install yarn
        run: npm install -g yarn


      - name: Use cache for yarn if available
        uses: c-hive/gha-yarn-cache@v1
  
      - name: Install crusher modules
        run: yarn

      - name: Install webpack
        run: npm install -g webpack

      - name: Install ncc
        run: npm install -g @vercel/ncc

      - name: Package crusher-server for deployment
        run: sh scripts/build-crusher-server.sh

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: crusher-server-images
          IMAGE_TAG: latest
          PORT: 80
        run: |
         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . --file ci/crusher-server/Dockerfile --build-arg PORT=80
         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
         echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
