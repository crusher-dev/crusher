name: Build/release electron-app

on:
  push:
    branches:
      - ft-recorder-release-debug

jobs:
  prepare:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.5.1

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.2
          cache: 'pnpm'

      - name: Create ecosystem.config.js and Copy .env.sample file
        run: cp ecosystem.config.sample.js ecosystem.config.js && cp .env.sample .env

      - name: Install crusher modules
        run: pnpm install --frozen-lockfile --reporter=append-only

      - name: Setup crusher for prod
        run: pnpm setup:prod

      - name: Show binary
        run: ls -l packages/electron-app/bin

      - name: Update packages/electron-app/package.json versions
        run: node ./scripts/update-local-ea-version.js
        env:
          CRUSHER_GIT_RELEASE_TOKEN: ${{ secrets.CRUSHER_GIT_RELEASE_TOKEN }}

      - if: matrix.os == 'ubuntu-20.04'
        name: Build release for electron app
        run: cd packages/electron-app && BACKEND_URL=https://backend.crusher.dev FRONTEND_URL=https://app.crusher.dev pnpm release

      - if: matrix.os == 'macos-latest'
        name: Build release for electron app
        run: cd packages/electron-app && BACKEND_URL=https://backend.crusher.dev FRONTEND_URL=https://app.crusher.dev PUBLISH_RELEASE=always pnpm release
        env:
          CSC_LINK: ${{ secrets.mac_certs }}
          CSC_KEY_PASSWORD: ${{ secrets.mac_certs_password }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}

      - if: matrix.os == 'macos-latest'
        name: 'Store crusher-darwin-arm64 as artifact'
        uses: actions/upload-artifact@v2
        with:
          name: crusher-darwin-arm64.zip
          path: output/crusher-electron-app-release/darwin/Crusher.Recorder-*-arm64.zip
          retention-days: 5
  
      - if: matrix.os == 'macos-latest'
        name: 'Store crusher-darwin-x64 as artifact'
        uses: actions/upload-artifact@v2
        with:
          name: crusher-darwin-x64.zip
          path: output/crusher-electron-app-release/darwin/Crusher.Recorder-*-x64.zip
          retention-days: 5

      - if: matrix.os == 'ubuntu-20.04'
        name: 'Store crusher-linux as artifact'
        uses: actions/upload-artifact@v2
        with:
          name: crusher-linux.zip
          path: output/crusher-electron-app-release/linux/Crusher.Recorder-*-linux.zip
          retention-days: 5

  release:
    needs: prepare
    runs-on: ubuntu-20.04
    concurrency: recorder-release
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
    
      - name: Show artifact
        run: ls -l artifacts

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.5.1

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.2
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install crusher modules
        run: pnpm install --frozen-lockfile --reporter=append-only

      - name: Run release script
        run: node ./scripts/release-debug.js
        env:
          CRUSHER_GIT_RELEASE_TOKEN: ${{ secrets.CRUSHER_GIT_RELEASE_TOKEN }}

      - run: cd output/crusher-cli && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}